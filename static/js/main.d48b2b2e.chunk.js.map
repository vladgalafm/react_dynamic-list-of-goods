{"version":3,"sources":["components/GoodsList/GoodsList.tsx","components/Button/Button.tsx","api/fetchData.ts","components/LoadButtons/LoadButtons.tsx","components/Goods/Goods.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","key","id","style","color","name","Button","handle","className","type","onClick","fetchData","url","a","fetch","response","json","LoadButtons","props","updateList","setLoading","setError","filterFirstFive","data","sort","b","splice","filterReds","filter","loadGoods","callback","then","catch","Goods","state","isLoading","hasError","status","setState","updateGoodsList","list","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,4BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,IACZ,0BAAMC,MAAO,CAAEC,MAAOJ,EAAKI,QACxBJ,EAAKK,YCLHC,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQF,EAAX,EAAWA,KAAX,OACrC,4BACEG,UAAU,eACVC,KAAK,SACLC,QAASH,GAERF,I,uBCbQM,EAAS,uCAAG,WAAUC,GAAV,eAAAC,EAAA,sEACAC,MAAMF,GADN,cACjBG,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,sDCWTC,EAA+B,SAACC,GAAW,IAC9CC,EAAqCD,EAArCC,WAAYC,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SAI1BC,EAAkB,SAACC,GACvB,OAAOA,EAAKC,MAAK,SAACX,EAAGY,GACnB,OAAQZ,EAAER,KAAOoB,EAAEpB,KAAQ,GAAK,KAC/BqB,OAAO,EAAG,IAGTC,EAAa,SAACJ,GAClB,OAAOA,EAAKK,QAAO,SAAA5B,GAAI,MAAmB,QAAfA,EAAKI,UAG5ByB,EAAY,SAACC,GACjBT,GAAS,GACTD,GAAW,GAEXT,EAhBc,2CAiBXoB,MAAK,SAAAR,GACJH,GAAW,GAETD,EADEW,EACSA,EAASP,EAAKA,MAEdA,EAAKA,SAGnBS,OAAM,WACLZ,GAAW,GACXC,GAAS,OAIf,OACE,yBAAKb,UAAU,WACb,kBAAC,EAAD,CACEH,KAAK,iBACLE,OAAQ,WACNsB,OAGJ,kBAAC,EAAD,CACExB,KAAK,qBACLE,OAAQ,WACNsB,EAAUP,MAGd,kBAAC,EAAD,CACEjB,KAAK,iBACLE,OAAQ,WACNsB,EAAUF,QCnDPM,EAAb,4MACEC,MAAQ,CACNpC,MAAO,GACPqC,WAAW,EACXC,UAAU,GAJd,EAOEhB,WAAa,SAACiB,GACZ,EAAKC,SAAS,CACZH,UAAWE,KATjB,EAaEhB,SAAW,SAACgB,GACV,EAAKC,SAAS,CACZF,SAAUC,KAfhB,EAmBEE,gBAAkB,SAACC,GACjB,EAAKF,SAAS,CACZxC,MAAO0C,KArBb,uDAyBY,IAAD,EACgCC,KAAKP,MAApCpC,EADD,EACCA,MAAOqC,EADR,EACQA,UAAWC,EADnB,EACmBA,SAE1B,OACE,oCACE,kBAAC,EAAD,CACEjB,WAAYsB,KAAKF,gBACjBnB,WAAYqB,KAAKrB,WACjBC,SAAUoB,KAAKpB,WAGfe,GAAY,uBAAG5B,UAAU,SAAb,gCAGZ2B,GAAa,uBAAG3B,UAAU,QAAb,eAGZ4B,IAAaD,GAAa,kBAAC,EAAD,CAAWrC,MAAOA,SA1CvD,GAA2B4C,IAAMC,WCAlBC,EAPO,kBACpB,oCACE,qDACA,kBAAC,EAAD,QCHJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d48b2b2e.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../interfaces/good';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map((good: Good) => (\n      <li key={good.id}>\n        <span style={{ color: good.color }}>\n          {good.name}\n        </span>\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\n\ninterface Props {\n  handle(): void;\n  name: string;\n}\n\nexport const Button: React.FC<Props> = ({ handle, name }) => (\n  <button\n    className=\"control__btn\"\n    type=\"button\"\n    onClick={handle}\n  >\n    {name}\n  </button>\n);\n","export const fetchData = async <T>(url: string): Promise<{data: T[]}> => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n","import React from 'react';\nimport { Button } from '../Button/Button';\nimport { fetchData } from '../../api/fetchData';\nimport { Good } from '../../interfaces/good';\n\ninterface Props {\n  updateList(list: Good[]): void;\n  setLoading(status: boolean): void;\n  setError(status: boolean): void;\n}\n\nexport const LoadButtons: React.FC<Props> = (props) => {\n  const { updateList, setLoading, setError } = props;\n\n  const API_URL = 'https://mate.academy/students-api/goods';\n\n  const filterFirstFive = (data: Good[]) => {\n    return data.sort((a, b) => {\n      return (a.name > b.name) ? 1 : -1;\n    }).splice(0, 5);\n  };\n\n  const filterReds = (data: Good[]) => {\n    return data.filter(good => good.color === 'red');\n  };\n\n  const loadGoods = (callback?: (data: Good[]) => Good[]) => {\n    setError(false);\n    setLoading(true);\n\n    fetchData<Good>(API_URL)\n      .then(data => {\n        setLoading(false);\n        if (callback) {\n          updateList(callback(data.data));\n        } else {\n          updateList(data.data);\n        }\n      })\n      .catch(() => {\n        setLoading(false);\n        setError(true);\n      });\n  };\n\n  return (\n    <div className=\"control\">\n      <Button\n        name=\"Load All goods\"\n        handle={() => {\n          loadGoods();\n        }}\n      />\n      <Button\n        name=\"Load 5 first goods\"\n        handle={() => {\n          loadGoods(filterFirstFive);\n        }}\n      />\n      <Button\n        name=\"Load red goods\"\n        handle={() => {\n          loadGoods(filterReds);\n        }}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport { GoodsList } from '../GoodsList/GoodsList';\nimport { LoadButtons } from '../LoadButtons/LoadButtons';\nimport { Good } from '../../interfaces/good';\n\ninterface State {\n  goods: Good[];\n  isLoading: boolean;\n  hasError: boolean;\n}\n\nexport class Goods extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    isLoading: false,\n    hasError: false,\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({\n      isLoading: status,\n    });\n  };\n\n  setError = (status: boolean) => {\n    this.setState({\n      hasError: status,\n    });\n  };\n\n  updateGoodsList = (list: Good[]) => {\n    this.setState({\n      goods: list,\n    });\n  };\n\n  render() {\n    const { goods, isLoading, hasError } = this.state;\n\n    return (\n      <>\n        <LoadButtons\n          updateList={this.updateGoodsList}\n          setLoading={this.setLoading}\n          setError={this.setError}\n        />\n        {\n          hasError && <p className=\"error\">Error occurred while loading</p>\n        }\n        {\n          isLoading && <p className=\"load\">Loading...</p>\n        }\n        {\n          !hasError && !isLoading && <GoodsList goods={goods} />\n        }\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport { Goods } from './components/Goods/Goods';\n\nconst App: React.FC = () => (\n  <>\n    <h1>Dynamic list of Goods</h1>\n    <Goods />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}